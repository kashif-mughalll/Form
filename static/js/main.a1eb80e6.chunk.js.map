{"version":3,"sources":["logo.svg","MaterialUIComponents/Form/form.js","MaterialUIComponents/Form/form.style.js","App.js","reportWebVitals.js","index.js"],"names":["validationSchema","yup","email","required","password","min","firstname","lastname","gender","bday","withStyles","inputClass","margin","marginBottom1","marginBottom","btn","fontSize","padding","classes","formik","useFormik","initialValues","onSubmit","values","alert","JSON","stringify","console","log","handleSubmit","className","Grid","container","spacing","item","sm","xs","TextField","variant","fullWidth","id","name","label","type","value","onChange","handleChange","error","touched","Boolean","errors","helperText","autoFocus","FormControl","InputLabel","htmlFor","Select","InputLabelProps","shrink","Button","color","App","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1eb80e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useStyles } from \"./form.style\";\r\nimport { FormControl, InputLabel, Select } from \"@material-ui/core\";\r\n\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(6, \"Password should be of minimum 6 characters length\")\r\n    .required(\"Password is required\"),\r\n  firstname: yup\r\n    .string(\"Enter your first name\")\r\n    .min(4, \"name should be greater then 4\")\r\n    .required(\"First name is required\"),\r\n  lastname: yup\r\n    .string(\"Enter your last name\")\r\n    .min(4, \"name should be greater then 4\")\r\n    .required(\"Last name is required\"),\r\n  gender: yup\r\n    .string(\"Select gender\")\r\n    .required(\"Gender is required\"),\r\n  bday : yup\r\n   .date(\"Select birthday\")\r\n   .required(\"Birthday is required\"),\r\n\r\n});\r\n\r\nconst Form = ({ classes }) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      gender: \"1\",\r\n      bday : ''\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      console.log(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={formik.handleSubmit} className=\"size\">\r\n        <Grid container spacing={2}>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              className={classes.inputClass}\r\n              fullWidth\r\n              id=\"firstname\"\r\n              name=\"firstname\"\r\n              label=\"First name\"\r\n              type=\"text\"\r\n              value={formik.values.firstname}\r\n              onChange={formik.handleChange}\r\n              error={\r\n                formik.touched.firstname && Boolean(formik.errors.firstname)\r\n              }\r\n              helperText={formik.touched.firstname && formik.errors.firstname}\r\n            />\r\n          </Grid>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              className={classes.inputClass}\r\n              fullWidth\r\n              id=\"lastname\"\r\n              name=\"lastname\"\r\n              label=\"Last Name\"\r\n              type=\"text\"\r\n              value={formik.values.lastname}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.lastname && Boolean(formik.errors.lastname)}\r\n              helperText={formik.touched.lastname && formik.errors.lastname}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          className={classes.marginBottom1}\r\n          fullWidth\r\n          autoFocus\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          value={formik.values.email}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.email && Boolean(formik.errors.email)}\r\n          helperText={formik.touched.email && formik.errors.email}\r\n        />\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item sm={6} xs={12}>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              className={classes.inputClass}\r\n              fullWidth\r\n            >\r\n              <InputLabel htmlFor=\"outlined-age-native-simple\">\r\n                Gender\r\n              </InputLabel>\r\n              <Select\r\n                id=\"gender\"\r\n                name=\"gender\"\r\n                label=\"gender\"\r\n                value={formik.values.gender}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.gender && Boolean(formik.errors.gender)}\r\n                helperText={formik.touched.gender && formik.errors.gender}\r\n              >\r\n                <option value={1}>Male</option>\r\n                <option value={2}>Female</option>\r\n                <option value={3}>Others</option>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item sm={6} xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              className={classes.inputClass}\r\n              fullWidth\r\n              id=\"bday\"\r\n              name=\"bday\"\r\n              value={formik.values.bday}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.bday && Boolean(formik.errors.bday)}\r\n              helperText={formik.touched.bday && formik.errors.bday}\r\n              label=\"Birthday\"\r\n              type=\"date\"\r\n              // defaultValue=\"1999-05-24\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          className={classes.inputClass}\r\n          fullWidth\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          value={formik.values.password}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.password && Boolean(formik.errors.password)}\r\n          helperText={formik.touched.password && formik.errors.password}\r\n        />\r\n        <Button className={classes.btn} color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(useStyles)(Form);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = ()=> ({\r\n  inputClass : {\r\n    margin : \"8px 0\",\r\n  },\r\n  marginBottom1 : {\r\n    margin : \"8px 0\",\r\n    marginBottom : \"26px\",\r\n  },\r\n  btn : {\r\n    fontSize : '16px',\r\n    padding : '10px 0'\r\n  }\r\n});\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Form from './MaterialUIComponents/Form/form'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h5 className=\"heading\">Information</h5>\n      <div style={{padding:'10px'}}>\n      <Form/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}